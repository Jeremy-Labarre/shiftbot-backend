# ─────────────────────────  render.yaml  ─────────────────────────
# Commit this file to the *root* of your shiftbot-backend repo and push.
# Render will (re)create the three resources automatically.
# ────────────────────────────────────────────────────────────────

services:
  # ── 1. Flask API (Gunicorn) ───────────────────────────────────
  - type: web
    name: shiftbot-api
    env: python
    plan: free
    region: oregon          # keep all resources in the same region

    buildCommand: |
      pip install -r requirements.txt
      python -m playwright install --with-deps

    startCommand: gunicorn app:app --bind 0.0.0.0:$PORT

    envVars:
      # Redis URL injected from the database block below
      - key: REDIS_URL
        fromService: shiftbot-redis:url

      # Example extra secrets (add what your app already expects)
      # - key: MSAL_CLIENT_ID
      #   value: abcdef12-....
      # - key: FLASK_SECRET_KEY
      #   generateValue: true
      # - key: SQLALCHEMY_DATABASE_URI
      #   value: sqlite:///site.db          # or a Postgres URI

  # ── 2. Celery worker ──────────────────────────────────────────
  - type: worker
    name: shiftbot-celery
    env: python
    plan: free
    region: oregon

    buildCommand: |
      pip install -r requirements.txt
      python -m playwright install --with-deps

    startCommand: celery -A celery_init.celery_app worker --loglevel=info --pool=solo

    envVars:
      - key: REDIS_URL
        fromService: shiftbot-redis:url

      # Duplicate any other vars the tasks need
      # - key: SQLALCHEMY_DATABASE_URI
      #   value: sqlite:///site.db

# ── 3. Managed Redis instance (message broker / cache) ──────────
databases:
  - name: shiftbot-redis
    plan: free-redis
    ipAllowList: []   # private to Render services
